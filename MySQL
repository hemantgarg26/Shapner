const Product = require('../models/product');

exports.getProducts = (req, res, next) => {
  Product.fetchAll().then(([rows, fieldData]) => {
    res.render('shop/product-list', {
      prods: rows,
      pageTitle: 'All Products',
      path: '/products'
    })
    .catch(err => console.log(err));    
});

exports.getProduct = (req, res, next) => {
  const prodID = req.params.productID;
  Product.findByID(prodID).then(([product]) => {
    res.render('shop/product-detail', {product : product[0], pageTitle : product.title,
      path: '/products'});
  }).catch(err => console.log(err));    
  }
}

exports.getIndex = (req, res, next) => {
  Product.fetchAll()
  .then(([rows, fieldData]) => {
    res.render('shop/index', {
      prods: rows,
      pageTitle: 'Shop',
      path: '/'
    });
  })
  .catch(err => console.log(err));
  }

exports.getCart = (req, res, next) => {
  res.render('shop/cart', {
    path: '/cart',
    pageTitle: 'Your Cart'
  });
};

exports.getOrders = (req, res, next) => {
  res.render('shop/orders', {
    path: '/orders',
    pageTitle: 'Your Orders'
  });
};

exports.getCheckout = (req, res, next) => {
  res.render('shop/checkout', {
    path: '/checkout',
    pageTitle: 'Checkout'
  });
};



const db = require('../util/database');


module.exports = class Product {
  constructor(title, imageUrl, description, price) {
    this.title = title;
    this.imageUrl = imageUrl;
    this.description = description;
    this.price = price;
  }

  save() {
    return db.execute(
      'INSERT INTO products (title, proce, imageURL, description) VALUES (?, ?, ?, ?)', [this.title, this.price, this.imageUrl, this.description]
    )
  }


  static fetchAll() {
    return db.execute('SELECT * FROM products')
  }

  static findByID(id) {
    return db.execute('RETURN * FROM products WHERE products.id =?', [id]);
  }
};
